//
// Custom sass mixins
//
// Then to use a mixin for a particular rule, add this inside the ruleset's
// curly brackets:
//   @include mix-in-name;

// text based extends
.hide-text{
  @include hide-text;
}
@mixin button($color){
  padding:10px 20px;
  border-radius:5px;
  box-shadow:0px 2px 0px adjust-saturation(darken($color, 11%), 1%);
  color:$color-title;
  background:$color;
  font-family:$font-header;
  font-size:14px;
  letter-spacing:1px;
}

@mixin article($color){
  padding:10px 20px;
  border-radius:5px;
  box-shadow:0px 2px 0px adjust-saturation(darken($color, 11%), 1%);
  background:$color;
  h2,
  h3{
    font-family:$font-alt-header;
    text-transform:uppercase;
  }
  font-size:12px;
  letter-spacing:1px;
  text-align:center;
  line-height:1.5em;
}

@mixin center-img($x,$y){
  position: relative;
  height:$y;
  img{
    position: absolute;
    top: 50%;
    left: 50%;
    margin-left: -$x/2;
    margin-top: -$y/2;
  }
}

// element-invisible as defined by http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin element-invisible {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    clip: rect(1px 1px 1px 1px); // IE6 and IE7 use the wrong syntax.
  }
  clip: rect(1px, 1px, 1px, 1px);
}
.element-invisible {
  @include element-invisible;
}

// Turns off the element-invisible effect.
@mixin element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}

@mixin element-focusable {
  @include element-invisible;

  &:active,
  &:focus {
    @include element-invisible-off;
  }
}

///
 // @mixin height-lineheight($height, $offset: 0)
 //
 // Allows single-line vertical centering of text
 //
 // @param: $height
 //  height of element, text will centern vertically within
 //
 // @param: $offset
 //  use to offset the line-height from height. For fonts that don't center right.
 ///
@mixin height-lineheight($height, $offset: 0){
  height: $height;
  line-height: $height + $offset;
}
@mixin minheight-lineheight($height, $offset: 0){
  min-height: $height;
  line-height: $height + $offset;
  height: auto;
}
@mixin height-lineheight-multi ($height, $lineheight, $offset: 0){
  $padding: ($height - $lineheight) / 2 ;
  $padding-top: $padding + $offset;
  $padding-bottom: $padding - $offset;
  min-height: $height;
  line-height: $lineheight;
  height: auto;
  padding-bottom: $padding-bottom;
  padding-top: $padding-top;
}

// The word "Unpublished" displayed underneath unpublished nodes and comments.
@mixin unpublished-div {
  height: 0;
  overflow: visible;
  color: #d8d8d8;
  font-size: 50px;
  line-height: 1;
  font-family: Impact, "Arial Narrow", Helvetica, sans-serif;
  font-weight: bold;
  text-transform: uppercase;
  text-align: center;
  word-wrap: break-word; // A very nice CSS3 property

  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    .lt-ie8 &>* {
      position: relative; // Otherwise these elements will appear below the "Unpublished" text.
    }
  }
}

// lower right corner plus/triangle
@mixin triangle-plus ($triangle-size){
  position: relative;
  z-index: 1;
  display: block;
  &:after{
    @extend %rg-fonticons;
    @extend .abs-pos-right-bottom;
    content: "â—¢";
    width: $triangle-size;
    height: $triangle-size;
    font-size: $triangle-size;
    line-height: $triangle-size;
  }
}

//fonts
@mixin font($font, $style: normal, $weight: normal) {
    font-family: $font, 'Arial', 'Helvetica';
    font-style:  $style;
    font-weight: $weight;
}

@mixin neon-style ($color, $size: 80){
  @include font($font-header);
  text-transform: uppercase;
  font-size: emCalc($size);
  letter-spacing: emCalc(1);
  color: $color;

  .no-touch &{
    text-shadow: 0 0 10px lighten($color, 11%),
      0 0 20px lighten($color, 11%),
      0 0 30px lighten($color, 11%),
      0 0 40px $color,
      0 0 70px $color,
      0 0 80px $color,
      0 0 100px $color,
      0 0 150px $color;
  }
}

// general fonticon extendable, see fones/fonticons.css
// %fonticons{
//   // fonticon work
//   font-family: 'fonticons';
//   speak: none;
//   font-style: normal;
//   font-weight: normal;
//   font-variant: normal;
//   text-transform: none;
//   line-height: 1;
//   -webkit-font-smoothing: antialiased;
// }

///
 // social icon mixin
 ///

@mixin social-icons{
  a {
    @include hide-text;
    display: block;

    @each $social-network in $social-networks{
      // select by href including network name
      &[href*="#{$social-network}"]{
        // include the sprites
        //@include sprites-sprite(social-#{$social-network});
      }
    }
  }
}

///
 // Media query compass sprites
 // Normal sprites cannot be used in media queries, this fixes that
 // https://gist.github.com/dfadler/3105369
 ///

 // http://compass-style.org/reference/compass/helpers/sprites/
// @mixin get-sprite($map, $sprite, $repeat: no-repeat, $height: true, $width: true){

//   //http://compass-style.org/reference/compass/helpers/sprites/#sprite-file
//   $sprite-image: sprite-file($map, $sprite);

//   // http://compass-style.org/reference/compass/helpers/sprites/#sprite-url
//   $sprite-map: sprite-url($map);

//   // http://compass-style.org/reference/compass/helpers/sprites/#sprite-position
//   $sprite-position: sprite-position($map, $sprite);

//   // Returns background
//   background: $sprite-map $sprite-position $repeat;

//   // http://compass-style.org/reference/compass/helpers/image-dimensions/
//   // Checks to see if the user wants height returned
//   @if $height == true {
//     // Gets the height of the sprite-image
//     $sprite-height: image-height($sprite-image);
//     // Returns the height
//     height: $sprite-height;
//   }

//   // http://compass-style.org/reference/compass/helpers/image-dimensions/
//   // Checks to see if the user wants height returned
//   @if $width == true {
//     // Gets the height of the sprite-image
//     $sprite-width: image-width($sprite-image);
//     // Returns the width
//     width: $sprite-width;
//   }
// }

///
 // Sticky bubble nav helper
 ///


// fancy outlines





